:144: syntax error after ';'
:145: syntax error after '}
	'
:146: syntax error after '}
	'
:147: syntax error after 'bool dragged;
	'
:148: syntax error after '{
		if( input.button == Key.Escape ) '
:149: syntax error after 'if'
:150: syntax error after ';'
:153: syntax error after '}'
:158: syntax error after '}'
:159: syntax error after '}}
	'
:160: syntax error after ')'
:161: syntax error after 'RightButton) ) {
			if(!dragged) '
:162: syntax error after '}'
:163: syntax error after '}'
:164: syntax error after '}
		}
		'
:165: syntax error after '}'
:166: syntax error after '}}
	'
:167: syntax error after '}}
	void move() { with(input) {
		if( rZ ) '
:168: syntax error after '}}
	void move() { with(input) {
		if( rZ ) {
			if( modifiers[Key.LeftShift] '
:169: syntax error after ')'
:171: syntax error after '}'
:185: syntax error after 't'
:187: syntax error after ';'
:188: syntax error after ';'
:189: syntax error after ';'
:190: syntax error after ';'
:191: syntax error after 'else if( modifiers[Key.LeftCtrl] && button == Key.Z ) {
			if(  modifiers[Key.LeftShift] ) current.redo(); else current.undo();
		//} else if( button == Key.R ) { foreach( layer; [flat,light] ) layer.upload();
		} else if( button == Key.LeftButton || button == Key.RightButton || button == Key.MiddleButton ) {
			if( !modifiers[Key.LeftShift] && cursor != Vec2.None ) if(tool) tool.press();
			dragged=false;
		} else return false;
		return true;
	}}
	void release() { with(input) {
		if( !modifiers[Key.LeftShift] && (button == Key.LeftButton || button == Key.RightButton) ) {
			if(!dragged) { if(tool) tool.click(); }
			else { if(tool) tool.release(); }
		}
		dragged=false;
	}}
	void move() { with(input) {
		if( rZ ) {
			if( modifiers[Key.LeftShift] ) current.scale *= 1.0+rZ/16.0;
			else if(tool) tool.wheel( rZ/16.0 );
		}
	}}
	void drag() { with(input) {
		dragged=true;
		if( modifiers[Key.LeftButton] && modifiers[Key.LeftShift] ) { //move
			if( rX != 0 ) current.translate += Vec2( rX/current.scale, 0 );
			if( rY != 0 ) current.translate += Vec2( 0, rY/current.scale );
			mX -= rX;  mY -= rY;
		} else {
			if( input.modifiers[Key.MiddleButton] ) toolSelector.show();
			if( tool && cursor != Vec2.None ) tool.drag();
		}
	}}
}

int main( string[] args ) {
	new Display( 1280,768,false );
	new Colorist( args[1..$] );
	TaskManager().work();
	TaskManager().waitWorkers();
	return 0;
'
fatal error, '' line 191
