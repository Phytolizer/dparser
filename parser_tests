#!/bin/bash -xv

export VALGRIND='linux32 valgrind --tool=memcheck --leak-check=yes --show-reachable=yes'
export VALGRIND=''

#cp -auv BUILD_VERSION Makefile *.c *.h grammar.g tests
pushd tests
#$MAKE -s make_dparser
#$MAKE gram
#$MAKE -s make_dparser
let failed=0
for g in *.test.g
do
  rm -f sample_parser
  if [ -e $g.flags ]
  then
    flags=`cat $g.flags`
  else
    flags= 
  fi
  $VALGRIND ./make_dparser $flags $g
  #mv -v gmon.out
  $MAKE -s sample_parser SAMPLE_GRAMMAR=$g
  for t in $(ls -1 $g.[0-9]{,[0-9]})
  do
    if [ -e $t.flags ]
	then
      flags=`cat $t.flags`
    else
      flags= 
    fi
    $VALGRIND ./sample_parser $flags -v $t >&! $t.out
    diff $t.out $t.check
    if [ $? ]
	then
      echo $t "******** FAILED ********"
      let failed++
    else
      echo $t "PASSED"
    fi
  done
done
echo "---------------------------------------"
if ( ! ( $failed ))
then
  echo "ALL tests PASSED"
else
  echo "********" $failed "test(s) FAILED *********"
fi
#rm -vf sample_parser BUILD_VERSION Makefile *.c *.h *.o make_dparser libdparse.a grammar.g
popd
